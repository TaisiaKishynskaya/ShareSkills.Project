@page "/"
@using MobileClient.Services
@layout NoMenuLayout
@inject NavigationManager Navigation
@inject HttpClient httpClient
@inject IAuthService AuthService
@inject IPreferencesService Preferences

<div class="main">
    <h1>Skills Share</h1>
    <div class="info">
        <div class="input-info">
            <input type="email" class="main-input" placeholder="Email" @bind="@email">
            <input type="password" class="main-input" placeholder="Password" @bind="@password">
        </div>

        @if (isError)
        {
        <p class="error">Incorrect email or password</p>
        }

        <button class="login-btn" disabled="@isCookiesBanner" @onclick="UserLogin">Login</button>
        <div class="login-link">
            <a href="" @onclick="registrationNavigate">register now</a>
        </div>
    </div>
    @if (isCookiesBanner)
    {
        <div class="cookie-banner">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M257.5 27.6c-.8-5.4-4.9-9.8-10.3-10.6c-22.1-3.1-44.6 .9-64.4 11.4l-74 39.5C89.1 78.4 73.2 94.9 63.4 115L26.7 190.6c-9.8 20.1-13 42.9-9.1 64.9l14.5 82.8c3.9 22.1 14.6 42.3 30.7 57.9l60.3 58.4c16.1 15.6 36.6 25.6 58.7 28.7l83 11.7c22.1 3.1 44.6-.9 64.4-11.4l74-39.5c19.7-10.5 35.6-27 45.4-47.2l36.7-75.5c9.8-20.1 13-42.9 9.1-64.9c-.9-5.3-5.3-9.3-10.6-10.1c-51.5-8.2-92.8-47.1-104.5-97.4c-1.8-7.6-8-13.4-15.7-14.6c-54.6-8.7-97.7-52-106.2-106.8zM208 144a32 32 0 1 1 0 64 32 32 0 1 1 0-64zM144 336a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm224-64a32 32 0 1 1 0 64 32 32 0 1 1 0-64z" /></svg>
            <p>do you allow using cookies?</p>
            <div class="buttons">
                <button @onclick="AllowCookies" class="cookie-btn">Yes</button>
                <button @onclick="DenyCookies" class="cookie-btn no-btn">No</button>
            </div>
        </div>
    }
</div>

@code 
{
    private string email;
    private string password;

    private bool isError = false;
    private bool isCookiesBanner = true;

    protected override async Task OnInitializedAsync()
    {
        // to login automaticly, but jwt is expiring too fast
        @* await CheckExistingToken(); *@
        // Preferences.Clear();
        if (await AuthService.GetCookiesPermission() == "true")
        {
            isCookiesBanner = false;
            if (!string.IsNullOrEmpty(Preferences.Get("userId", "")) && await AuthService.GetCookies())
            {
                calendarNavigate();
            }
            // UserLogin();
        }
    }

    private async Task CheckExistingToken()
    {
        // Check if the JWT token is stored in Preferences
        var jwt = Preferences.Get("jwt", string.Empty);

        if (!string.IsNullOrEmpty(jwt))
        {
            // Optionally, you can validate the token with the server here
            Console.WriteLine("JWT token found, navigating to calendar...");
            await AuthService.getUserRole();
            this.calendarNavigate();
        }
    }

    public async Task UserLogin()
    {
        if (await AuthService.UserLogin(email, password))
        {
            isError = false;
            // await AuthService.getUserRole();
            calendarNavigate();
        }
        else
        {
            isError = true;
        }

    }

    private async Task AllowCookies()
    {
        await AuthService.AllowCookies();
        isCookiesBanner = false;
    }

    private async Task DenyCookies()
    {
        await AuthService.DenyCookies();
        isCookiesBanner = false;
    }


    private void calendarNavigate()
    {
        Navigation.NavigateTo("/calendar");
    }

    private void registrationNavigate()
    {
        Navigation.NavigateTo("/registration");
    }
}