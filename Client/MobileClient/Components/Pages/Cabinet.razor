@page "/cabinet"
@inject NavigationManager Navigation
@inject HttpClient httpClient

<div class="main">
        <div class="title">
            <p>Навички Share</p>
        </div>

        <div class="content">
            @if (user != null)
            {
                <div class="block">
                    <p class="name">@user.Name @user.Surname</p>
                    <p class="email">@user.Email</p>
                </div>
            <hr>
            <div class="block">
                <p class="skills-text">Обрані навички</p>
                <div class="skills-cards">
                    @foreach (var skill in skills) 
                    {
                        <div class="skill-card">
                            <p>@skill</p>
                        </div>
                    }
                </div>
            </div>
            <hr>
            <button class="feedback" @onclick="() => IsShowDialog=true">Змінити інформацію профілю</button>
            <button class="feedback" @onclick='() => Navigation.NavigateTo("/choose-skills")'>Змінити навички</button>
            <button class="feedback" @onclick="goToFeedbackPage">Залишити звортній зв'язок</button>
            }
            else
            {
                <p>loading...</p>
            }
            @* for debug *@
            <button class="feedback" @onclick="ClearPreferences">clear Preferences</button>
        </div>
        @if (IsShowDialog)
        {
            <div class="dialog">
                <svg @onclick="() => IsShowDialog=false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"/></svg>
                <input type="text" class="dialog-input" placeholder="Ім'я" @bind="@userToChange.Name">
                <input type="text" class="dialog-input" placeholder="Прізвище" @bind = "@userToChange.Surname">
                <input type="text" class="dialog-input" placeholder="Email" @bind = "@userToChange.Email">
                <input type="text" class="dialog-input" placeholder="Пароль" @bind = "@newPassword">
                <button class="next-btn" @onclick="ChangeInfo">
                    Змінити
                </button>
            </div>
        }
    </div>

@code {
    public class User
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Surname { get; set; }
        public string Email { get; set; }
        public string PasswordHash { get; set; }
        public string Role { get; set; }
    }
    private User user;
    private User userToChange = new User
    {
        Id = "",
        Name = "",
        Surname = "",
        Email = "",
        PasswordHash = "",
        Role = ""
    };
    private String newPassword = "";
    private string[] skills = {"Python", "Java", "C#", "HTML", "C++"};
    private bool IsShowDialog = false;

    protected override async Task OnInitializedAsync()
    {
        //TODO: get correct user token
        var userId = Preferences.Get("userId", string.Empty);
        Console.WriteLine(userId);
        try
        {
            var response = await httpClient.GetAsync($"http://localhost:5115/users/{userId}");
            if (response.IsSuccessStatusCode)
            {
                user = await response.Content.ReadFromJsonAsync<User>();
                StateHasChanged();
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    private void goToFeedbackPage() {
        Navigation.NavigateTo("/feedback");
    }

    //for debug
    private void ClearPreferences()
    {
        Preferences.Clear();
        Console.WriteLine("Cleared Preferences");
    }

    private async Task ChangeInfo() {
        var userId = Preferences.Get("userId", string.Empty);
        var requestData = new
        {
            name = userToChange.Name,
            surname = userToChange.Surname,
            email = userToChange.Email,
            password = newPassword
        };
        var jsonContent = new StringContent(
            System.Text.Json.JsonSerializer.Serialize(requestData),
            System.Text.Encoding.UTF8,
            "application/json"
        );
        try
        {
            httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Preferences.Get("jwt", string.Empty));
            var response = await httpClient.PutAsync($"http://localhost:5115/users/{userId}", jsonContent);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("User info changed");
                IsShowDialog = false;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}