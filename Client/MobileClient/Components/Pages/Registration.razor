@page "/registration"
@using MobileClient.Services
@layout NoMenuLayout
@inject NavigationManager Navigation
@inject HttpClient httpClient
@inject IAuthService AuthService

<div class="main">
        <h1>Skills Share</h1>
        <div class="info">
            <div class="input-info">
                <input type="text" class="main-input" placeholder="Name" @bind="@Name">
                @if(isNameError)
                {
                <p class="error">@string.Join(",", registerResponse.Errors["Name"])</p>
                }
                <input type="text" class="main-input" placeholder="Surname" @bind="@Surname">
                @if(isSurnameError)
                {
                    <p class="error">@string.Join(",", registerResponse.Errors["Surname"])</p>
                }
                <input type="email" class="main-input" placeholder="email" @bind="@Email">
                @if(isEmailError)
                {
                    <p class="error">@string.Join(",", registerResponse.Errors["Email"])</p>
                }
                <input type="password" class="main-input" placeholder="Password" @bind="@Password">
                @if(isPasswordError)
                {
                    <p class="error">@string.Join(",", registerResponse.Errors["Password"])</p>
                }
            </div>
            <div class="switch-btn">
                <p>Student</p>
                <label class="switch">
                    <input type="checkbox" @bind="@IsTeacher">
                    <span class="slider round"></span>
                </label>
                <p>Teacher</p>
            </div>
            @if (isError)
            {
                <p class="error">An error occurred</p>
            }
            <button class="next-btn" @onclick="Register">Next</button>
            <div class="login-link">
                <p>already registered?</p>
                <a href="" @onclick="loginNavigate">login</a>
            </div>
    
        </div>
    </div>

@code {
    private string Name { get; set; }
    private string Surname { get; set; }
    private string Email { get; set; }
    private string Password { get; set; }
    private bool IsTeacher;
    private ValidationResponse registerResponse;
    private bool isError = false;
    private bool isNameError = false;
    private bool isSurnameError = false;
    private bool isEmailError = false;
    private bool isPasswordError = false;

    private async Task Register()
    {
        isError = false;
        isNameError = false;
        isSurnameError = false;
        isEmailError = false;
        isPasswordError = false;
        registerResponse = await AuthService.Register(IsTeacher, Name, Surname, Email, Password);
        if (registerResponse.Succesful)
        {
            isError = false;
            nextNavigate();
        }
        else
        {
            if (registerResponse.Errors != null && registerResponse.Errors.Count != 0)
            {
                if (registerResponse.Errors.ContainsKey("Name"))
                {
                    isNameError = true;
                }
                if (registerResponse.Errors.ContainsKey("Surname"))
                {
                    isSurnameError = true;
                }
                if (registerResponse.Errors.ContainsKey("Email"))
                {
                    isEmailError = true;
                }
                if (registerResponse.Errors.ContainsKey("Password"))
                {
                    isPasswordError = true;
                }
            }
            else
            {
                isError = true;
            }
        }
    }

    private void nextNavigate()
    {
        if (IsTeacher)
        {
        Navigation.NavigateTo("/choose-skills");
        }
        else
        {
            Navigation.NavigateTo("/calendar");
        }
    }

    private void loginNavigate()
    {
        Navigation.NavigateTo("/");
    }

}