@page "/search"
@inject NavigationManager Navigation
@inject AuthService AuthService

<div class="main">
        <input class="mentor-search" type="text" placeholder="Search teacher..." @onclick="()=>isFilters = !isFilters">
        @if (isFilters)
        {
        <div class="filters-container">
        <div class="filters">
            <div class="col">
                <p>skill:</p>
                @if (skills != null)
                {
                @foreach (var skill in skills)
                {
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="skill">
                    <p>@skill.skill</p>
                </div>
                }
                }
            </div>

            <div class="col">
                <p>time:</p>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="time">
                    <p>day</p>
                </div>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="time">
                    <p>day</p>
                </div>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="time">
                    <p>day</p>
                </div>
            </div>

            <div class="col">
                <p>level:</p>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="level">
                    <p>Intermediate</p>
                </div>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="level">
                    <p>Intermediate</p>
                </div>
                <div class="skill-check-container">
                    <input class="skill-check" type="radio" name="level">
                    <p>Intermediate</p>
                </div>
            </div>
            </div>
            <button class="find-btn">find</button>
        </div>
        }
        <div class="mentor-cards">
            @foreach (var mentor in mentorList)
            {
                <div class="card" @onclick="() => OpenMentorInformation(mentor.id)">
                    <div class="text">
                        <p>@mentor.name</p>
                        <p>@mentor.skill</p>
                    </div>
                    <div class="rating">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="yellow" d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z"/></svg>
                        <p>@mentor.rating</p>
                    </div>
                </div>
            }
        </div>
    </div>

@code {
    private class MentorEntity {
        public int id {get; set;}
        public string name {get; set;}
        public string skill {get; set;}
        public double rating {get; set;}

        public MentorEntity(int id, string name, string skill, double rating) {
            this.id = id;
            this.name = name;
            this.skill = skill;
            this.rating = rating;
        }
    }

    private MentorEntity[] mentorList = {
        new MentorEntity(0, "Іванов Іван", "Python", 4.8),
        new MentorEntity(1, "Шевченко Тарас", "Java", 4.8),
        new MentorEntity(2, "Іванов Іван", "Python", 4.8),
        new MentorEntity(3, "Шевченко Тарас", "Java", 4.8),
        new MentorEntity(4, "Іванов Іван", "Python", 4.8),
        new MentorEntity(5, "Шевченко Тарас", "Java", 4.8),
        new MentorEntity(6, "Іванов Іван", "Python", 4.8),
        new MentorEntity(7, "Шевченко Тарас", "Java", 4.8),
        new MentorEntity(8, "Іванов Іван", "Python", 4.8),
        new MentorEntity(9, "Шевченко Тарас", "Java", 4.8),
        new MentorEntity(10, "Іванов Іван", "Python", 4.8),
        new MentorEntity(11, "Шевченко Тарас", "Java", 4.8)
    };

    private List<Skill> skills;
    private bool isFilters = false;

    protected override async Task OnInitializedAsync()
    {
        skills = await AuthService.GetSkills();
    }

    private void OpenMentorInformation(int mentorId) {
        Navigation.NavigateTo($"/mentor/{mentorId}");
    }
}